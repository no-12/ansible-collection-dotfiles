export FZF_DEFAULT_OPTS="
--ansi
--height='80%'
--bind='alt-s:toggle-sort'
--bind='alt-p:toggle-preview'
--bind='alt-w:toggle-preview-wrap'
"

is_git_repo() {
    git rev-parse --is-inside-work-tree >/dev/null
}

ga() {
    is_git_repo || return 1
    git status -su |
        grep -E '^[[:blank:]]|\?' |
        fzf --exit-0 --multi --reverse --tiebreak=index --preview='[[ {1} = "??" ]] && highlight -O ansi -l {2} || git diff --color=always -- {2}' |
        cut -c4- |
        xargs -I % git add --verbose %
    git status
}

glg() {
    is_git_repo || return 1
    git lg --color=always "$@" |
        fzf --no-multi --no-sort --reverse --tiebreak=index --preview="echo {} | grep -Eo '[a-f0-9]+' | head -1 | xargs -I % git show --color=always %" |
        grep -Eo '[a-f0-9]+' |
        head -1 |
        xargs -I % git show --color=always %
}

_git_branch_fzf() {
    git branch --color=always -vv "$@" |
        grep -v HEAD |
        fzf --no-multi --reverse --preview="echo {} | awk -F'[* ]' '{print \$3}' | xargs -I % git l --color=always --max-count 50 %" |
        awk -F'[* ]' '{print $3}'
}

gbr() {
    is_git_repo || return 1
    git remote update origin --prune
    _git_branch_fzf --remotes "$@" | xargs -I % git checkout --track %
}

gb() {
    is_git_repo || return 1
    _git_branch_fzf "$@" | xargs -I % git checkout %
}

if [[ -f /usr/share/fzf/completion.zsh ]]; then
    source /usr/share/fzf/completion.zsh
fi
if [[ -f /usr/share/fzf/key-bindings.zsh ]]; then
    source /usr/share/fzf/key-bindings.zsh
fi
